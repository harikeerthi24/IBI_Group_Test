In what order will the numbers 1-4 be logged to the console when the code below is executed? Why?

Ans-
OUTPUT- 1, 4, 3, 2
The order of logging is as follows:

1.console.log(1); - This will log 1 to the console immediately.

2.console.log(4); - This will log 4 to the console immediately after 1.

3.setTimeout(function(){console.log(3)}, 0); - This schedules the callback function to be executed after 0 milliseconds (immediately). However, it will be put in the event queue, and JavaScript will first complete the current execution context before processing the event queue. So, it logs 3 after 1 and 4.

4.setTimeout(function(){console.log(2)}, 1000); - This schedules the callback function to be executed after 1000 milliseconds (1 second). As setTimeout is asynchronous, it won't block the execution of the following code. So, it logs 2 last after the initial 1, 4, and the delayed 3.
